/**
 * Script para sincronizar Problems do c√≥digo para o Firebase
 * 
 * Este script:
 * 1. Extrai todos os problems do PROBLEM_CONTEXT_DICT
 * 2. Atualiza o campo "problems" em /dynamic-lists/global-lists no Firebase
 * 3. Mant√©m a ordem exata do c√≥digo
 * 
 * ATEN√á√ÉO: Este script SOBRESCREVE os problems no Firebase!
 * 
 * USO: node scripts/sync-problems-to-firebase.js
 */

const { initializeApp } = require('firebase/app');
const { getFirestore, doc, updateDoc, getDoc } = require('firebase/firestore');

// Configura√ß√£o do Firebase
const firebaseConfig = {
  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
  databaseURL: process.env.NEXT_PUBLIC_FIREBASE_DATABASE_URL,
  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID
};

// Inicializar Firebase
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

/**
 * Lista completa de problems extra√≠da do PROBLEM_CONTEXT_DICT
 * Organizada por departamento, mantendo a ordem exata do c√≥digo
 */
const ALL_PROBLEMS = [
  // A&B (19 problemas)
  "A&B - Atendimento demora",
  "A&B - Atendimento insistente",
  "A&B - Caf√© da manh√£ n√£o dispon√≠vel",
  "A&B - Falta de higiene",
  "A&B - Falta de produto",
  "A&B - M√° qualidade",
  "A&B - N√£o dispon√≠vel",
  "A&B - Variedade limitada",
  "A&B - Qualidade da comida",
  "A&B - Pre√ßo elevado",
  "A&B - Demora no servi√ßo",
  "A&B - Falta de op√ß√µes",
  "A&B - Atendimento ruim",
  "A&B - Refei√ß√£o fria",
  "A&B - Bebidas limitadas",
  "A&B - Espa√ßo pequeno",
  "A&B - Falta de tempero",
  "A&B - Sujeira",
  "A&B - Hor√°rio restrito",

  // Corporativo (7 problemas)
  "Corporativo - Atendimento demora",
  "Corporativo - Cobran√ßa indevida",
  "Corporativo - Informa√ß√£o incorreta",
  "Corporativo - Falta de comunica√ß√£o",
  "Corporativo - Processo lento",
  "Corporativo - Erro no sistema",
  "Corporativo - Atendimento ruim",

  // EG - Experi√™ncia do H√≥spede (7 problemas)
  "EG - Atendimento demora",
  "EG - Atendimento insistente",
  "EG - Falta de comunicacao",
  "EG - Experi√™ncia ruim",
  "EG - Falta de aten√ß√£o",
  "EG - Servi√ßo impessoal",
  "EG - Expectativa n√£o atendida",

  // Governan√ßa (26 problemas)
  "Governan√ßa - Falta de limpeza",
  "Governan√ßa - Falta de produto",
  "Governan√ßa - Falta de limpeza no banheiro",
  "Governan√ßa - Falta de limpeza no quarto",
  "Governan√ßa - Roupa de cama suja",
  "Governan√ßa - Toalhas sujas",
  "Governan√ßa - Cheiro ruim",
  "Governan√ßa - Poeira",
  "Governan√ßa - Banheiro sujo",
  "Governan√ßa - Quarto mal arrumado",
  "Governan√ßa - Falta de amenities",
  "Governan√ßa - Len√ß√≥is manchados",
  "Governan√ßa - Falta de troca",
  "Governan√ßa - Sujeira vis√≠vel",
  "Governan√ßa - Banheiro com cabelo",
  "Governan√ßa - Lixo n√£o recolhido",
  "Governan√ßa - Ch√£o sujo",
  "Governan√ßa - Espelho sujo",
  "Governan√ßa - Tapete sujo",
  "Governan√ßa - Cortina suja",
  "Governan√ßa - Frigobar sujo",
  "Governan√ßa - Roup√£o sujo",
  "Governan√ßa - Travesseiro sujo",
  "Governan√ßa - Cobertor sujo",
  "Governan√ßa - Colcha suja",
  "Governan√ßa - Janela suja",
  "Governan√ßa - Varanda suja",

  // Lazer (12 problemas)
  "Lazer - Falta de op√ß√µes",
  "Lazer - N√£o dispon√≠vel",
  "Lazer - Piscina suja",
  "Lazer - Superlotado",
  "Lazer - Spa indispon√≠vel",
  "Lazer - Atividades canceladas",
  "Lazer - √Årea pequena",
  "Lazer - Falta de toalhas",
  "Lazer - Hor√°rio restrito",
  "Lazer - Espregui√ßadeiras sujas",
  "Lazer - Sem guarda-vidas",
  "Lazer - Barulho excessivo",

  // Manuten√ß√£o (47 problemas)
  "Manuten√ß√£o - Ar-condicionado com falha",
  "Manuten√ß√£o - Chuveiro com falha",
  "Manuten√ß√£o - Elevador com falha",
  "Manuten√ß√£o - Equipamento com falha",
  "Manuten√ß√£o - Falta de manuten√ß√£o",
  "Manuten√ß√£o - Infiltra√ß√£o",
  "Manuten√ß√£o - Porta com falha",
  "Manuten√ß√£o - Tomada com falha",
  "Manuten√ß√£o - TV com falha",
  "Manuten√ß√£o - Vazamento",
  "Manuten√ß√£o - Janela com falha",
  "Manuten√ß√£o - Banheiro com problemas",
  "Manuten√ß√£o - Mofo",
  "Manuten√ß√£o - Toalhas velhas",
  "Manuten√ß√£o - Fechadura quebrada",
  "Manuten√ß√£o - Ilumina√ß√£o ruim",
  "Manuten√ß√£o - Cortina quebrada",
  "Manuten√ß√£o - Frigobar com falha",
  "Manuten√ß√£o - Descarga com falha",
  "Manuten√ß√£o - Pia entupida",
  "Manuten√ß√£o - Box quebrado",
  "Manuten√ß√£o - Arm√°rio quebrado",
  "Manuten√ß√£o - Cama quebrada",
  "Manuten√ß√£o - Cadeira quebrada",
  "Manuten√ß√£o - Mesa quebrada",
  "Manuten√ß√£o - Cortineiro quebrado",
  "Manuten√ß√£o - Espelho quebrado",
  "Manuten√ß√£o - Pintura ruim",
  "Manuten√ß√£o - Piso danificado",
  "Manuten√ß√£o - Teto com problemas",
  "Manuten√ß√£o - Varanda com problemas",
  "Manuten√ß√£o - Persiana quebrada",
  "Manuten√ß√£o - Ventilador com falha",
  "Manuten√ß√£o - Aquecedor com falha",
  "Manuten√ß√£o - Cofre com falha",
  "Manuten√ß√£o - Telefone com falha",
  "Manuten√ß√£o - Campainha quebrada",
  "Manuten√ß√£o - Ma√ßaneta solta",
  "Manuten√ß√£o - Ralo entupido",
  "Manuten√ß√£o - Umidade",
  "Manuten√ß√£o - Equipamento de lazer com falha",
  "Manuten√ß√£o - Falta de manuten√ß√£o em lazer",
  "Manuten√ß√£o - Academia com equipamentos ruins",
  "Manuten√ß√£o - Piscina fria",
  "Manuten√ß√£o - Falta de tomada USB",
  "Manuten√ß√£o - Cart√£o de acesso com falha",

  // Opera√ß√µes (33 problemas)
  "Opera√ß√µes - Atendimento demora",
  "Opera√ß√µes - Atendimento insistente",
  "Opera√ß√µes - Atendimento ruim",
  "Opera√ß√µes - Barulho",
  "Opera√ß√µes - Check-in demora",
  "Opera√ß√µes - Check-out demora",
  "Opera√ß√µes - Cobran√ßa indevida",
  "Opera√ß√µes - Falta de comunica√ß√£o",
  "Opera√ß√µes - Falta de privacidade",
  "Opera√ß√µes - Informa√ß√£o incorreta",
  "Opera√ß√µes - Quarto n√£o preparado",
  "Opera√ß√µes - Reserva com problema",
  "Opera√ß√µes - Seguran√ßa inadequada",
  "Opera√ß√µes - Estacionamento lotado",
  "Opera√ß√µes - Falta de informa√ß√£o",
  "Opera√ß√µes - Recep√ß√£o ruim",
  "Opera√ß√µes - Upgrade negado",
  "Opera√ß√µes - Perda de pertences",
  "Opera√ß√µes - Falta de cortesia",
  "Opera√ß√µes - Demora na solu√ß√£o",
  "Opera√ß√µes - Falta de organiza√ß√£o",
  "Opera√ß√µes - Reclama√ß√£o ignorada",
  "Opera√ß√µes - Hor√°rio n√£o cumprido",
  "Opera√ß√µes - Concierge ruim",
  "Opera√ß√µes - Bagagem extraviada",
  "Opera√ß√µes - Servi√ßo impessoal",
  "Opera√ß√µes - Falta de agilidade",
  "Opera√ß√µes - Equipe despreparada",
  "Opera√ß√µes - Falta de empatia",
  "Opera√ß√µes - Erro no pedido",
  "Opera√ß√µes - Falta de flexibilidade",
  "Opera√ß√µes - Burocracia excessiva",
  "Opera√ß√µes - Atendimento telef√¥nico ruim",

  // Produto (24 problemas)
  "Produto - Custo-benef√≠cio ruim",
  "Produto - Espa√ßo insuficiente",
  "Produto - Falta de acessibilidade",
  "Produto - Localiza√ß√£o ruim",
  "Produto - Muito caro",
  "Produto - Ru√≠do externo",
  "Produto - Vista ruim",
  "Produto - Quarto pequeno",
  "Produto - Cama desconfort√°vel",
  "Produto - Banheiro pequeno",
  "Produto - Falta de tomadas",
  "Produto - Decora√ß√£o ruim",
  "Produto - M√≥veis velhos",
  "Produto - Colch√£o ruim",
  "Produto - Travesseiro ruim",
  "Produto - Falta de espelho",
  "Produto - Ilumina√ß√£o fraca",
  "Produto - Varanda pequena",
  "Produto - Closet pequeno",
  "Produto - Banheira pequena",
  "Produto - Isolamento ac√∫stico ruim",
  "Produto - All inclusive limitado",
  "Produto - Falta de privacidade",
  "Produto - Transfer n√£o dispon√≠vel",

  // TI (16 problemas)
  "TI - Wi-fi n√£o conecta",
  "TI - Wi-fi lento",
  "TI - Wi-fi inst√°vel",
  "TI - Canais limitados",
  "TI - App do hotel ruim",
  "TI - Senha Wi-fi complicada",
  "TI - Sinal fraco",
  "TI - Falta de suporte t√©cnico",
  "TI - Sistema lento",
  "TI - Aplicativo inst√°vel",
  "TI - TV n√£o funciona",
  "TI - Sistema de som com falha",
  "TI - Chromecast com falha",
  "TI - Controle remoto quebrado",
  "TI - Smart TV com problemas",
  "TI - Streaming n√£o dispon√≠vel",
];

/**
 * Fun√ß√£o principal
 */
async function syncProblemsToFirebase() {
  try {
    console.log('üöÄ Iniciando sincroniza√ß√£o de problems para o Firebase...\n');

    const docRef = doc(db, 'dynamic-lists', 'global-lists');

    // 1. Verificar documento atual
    console.log('üìã Buscando documento atual...');
    const docSnap = await getDoc(docRef);

    if (!docSnap.exists()) {
      console.error('‚ùå Documento n√£o encontrado em /dynamic-lists/global-lists');
      process.exit(1);
    }

    const currentData = docSnap.data();
    const currentProblems = currentData.problems || [];

    console.log(`   ‚úÖ Documento encontrado`);
    console.log(`   üìä Problems atuais no Firebase: ${currentProblems.length}`);
    console.log(`   üìä Problems no c√≥digo: ${ALL_PROBLEMS.length}\n`);

    // 2. Mostrar diferen√ßas
    console.log('üîç Analisando diferen√ßas...');
    
    const problemsNoFirebaseNaoNoCodigo = currentProblems.filter(p => !ALL_PROBLEMS.includes(p));
    const problemsNoCdigoNaoNoFirebase = ALL_PROBLEMS.filter(p => !currentProblems.includes(p));

    if (problemsNoFirebaseNaoNoCodigo.length > 0) {
      console.log(`\n‚ö†Ô∏è  Problems no Firebase que N√ÉO est√£o no c√≥digo (${problemsNoFirebaseNaoNoCodigo.length}):`);
      problemsNoFirebaseNaoNoCodigo.forEach(p => console.log(`   - ${p}`));
    }

    if (problemsNoCdigoNaoNoFirebase.length > 0) {
      console.log(`\n‚ú® Problems no c√≥digo que N√ÉO est√£o no Firebase (${problemsNoCdigoNaoNoFirebase.length}):`);
      problemsNoCdigoNaoNoFirebase.forEach(p => console.log(`   - ${p}`));
    }

    if (problemsNoFirebaseNaoNoCodigo.length === 0 && problemsNoCdigoNaoNoFirebase.length === 0) {
      console.log('   ‚úÖ Nenhuma diferen√ßa encontrada! Firebase e c√≥digo est√£o sincronizados.');
      console.log('\n‚ú® Sincroniza√ß√£o conclu√≠da com sucesso!\n');
      process.exit(0);
    }

    // 3. Atualizar no Firebase
    console.log('\nüíæ Atualizando Firebase...');
    
    await updateDoc(docRef, {
      problems: ALL_PROBLEMS,
      problems_updated_at: new Date(),
      problems_synced_from: 'generate-embeddings/route.ts PROBLEM_CONTEXT_DICT',
      total_problems: ALL_PROBLEMS.length
    });

    console.log('   ‚úÖ Firebase atualizado com sucesso!');

    // 4. Validar atualiza√ß√£o
    console.log('\nüîç Validando atualiza√ß√£o...');
    const updatedDocSnap = await getDoc(docRef);
    const updatedData = updatedDocSnap.data();
    const updatedProblems = updatedData.problems || [];

    console.log(`   ‚úÖ Problems no Firebase ap√≥s atualiza√ß√£o: ${updatedProblems.length}`);

    // 5. Resumo por departamento
    console.log('\nüìä Resumo por departamento:');
    const departamentos = {
      'A&B': 0,
      'Corporativo': 0,
      'EG': 0,
      'Governan√ßa': 0,
      'Lazer': 0,
      'Manuten√ß√£o': 0,
      'Opera√ß√µes': 0,
      'Produto': 0,
      'TI': 0
    };
    
    console.log('   üìù Nota: Transfer movido de Opera√ß√µes ‚Üí Produto (relacionado √† keyword "Produto - Transfer")');

    ALL_PROBLEMS.forEach(problem => {
      const dept = problem.split(' - ')[0];
      if (departamentos[dept] !== undefined) {
        departamentos[dept]++;
      }
    });

    Object.entries(departamentos).forEach(([dept, count]) => {
      console.log(`   ${dept.padEnd(15)} ${count} problems`);
    });

    console.log(`\n   ${'TOTAL'.padEnd(15)} ${ALL_PROBLEMS.length} problems`);

    console.log('\n‚ú® Sincroniza√ß√£o conclu√≠da com sucesso!\n');
    process.exit(0);

  } catch (error) {
    console.error('\n‚ùå Erro durante sincroniza√ß√£o:', error);
    process.exit(1);
  }
}

// Executar script
syncProblemsToFirebase();
